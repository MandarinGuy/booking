# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle

name: Java CI with Gradle

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      actions: read
      checks: write

    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: "21"
          distribution: "temurin"

      - name: Build (no tests)
        run: ./gradlew clean build -x test -Dspring.profiles.active=test

      - name: Test
        run: ./gradlew test -Dspring.profiles.active=local

      - name: Publish Test Report
        uses: dorny/test-reporter@v1
        with:
          name: Test Result
          path: '**/build/test-results/**/*.xml'
          reporter: java-junit
          fail-on-error: 'true'
          # check_name: Custom Check Name # GitHub Checks API에 표시될 이름
          # list_tests: 'all' # 모든 테스트 목록을 PR 코멘트에 포함
          # list_suites: 'all' # 모든 테스트 스위트 목록을 PR 코멘트에 포함
          # fail-on-each-error: 'false' # 각 테스트 오류마다 실패 여부 설정
