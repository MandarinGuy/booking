plugins {
    id 'com.epages.restdocs-api-spec' version '0.18.2'
    id 'org.asciidoctor.jvm.convert' version '3.3.2'
}

configurations {
    byteBuddyAgent
    asciidoctorExt
}

ext {
    set('snippetsDir', file('build/generated-snippets'))
}

dependencies {
    api(project(':domain'))
    implementation project(':common')
    api(project(':internal'))
    // ---- Spring Boot Core ----
    implementation 'org.springframework.boot:spring-boot-starter'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-aop'

    // ---- Data & Database ----
    implementation 'com.mysql:mysql-connector-j:8.3.0'
    runtimeOnly 'com.h2database:h2'
    testRuntimeOnly 'com.h2database:h2'
    implementation 'com.github.gavlyukovskiy:p6spy-spring-boot-starter:1.9.0'


    // ---- Dev Only ----
    developmentOnly 'org.springframework.boot:spring-boot-docker-compose'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'

    // ---- Testing ----
    testImplementation 'com.tngtech.archunit:archunit-junit5:1.3.0'
    byteBuddyAgent 'net.bytebuddy:byte-buddy-agent:1.17.6'
    testImplementation 'org.mockito:mockito-core:5.19.0'


    // ---- API Docs (REST Docs + Rest Assured) ----
    testImplementation 'org.springframework.restdocs:spring-restdocs-restassured'

    asciidoctorExt 'org.springframework.restdocs:spring-restdocs-asciidoctor:3.1.0'
}

asciidoctor {
    group = 'documentation'
    description = 'Converts AsciiDoc files to HTML, including REST Docs snippets.'
    dependsOn test
    baseDirFollowsSourceDir()
    sourceDir = file('src/docs')
    sources {
        include '**/*.adoc'
    }
    inputs.dir snippetsDir
    attributes 'snippets': snippetsDir
    resources {
        from(snippetsDir) { into 'snippets' }
    }
    outputDir = layout.buildDirectory.dir("docs/asciidoc").get().asFile
}

tasks.named('test') {
    jvmArgs "-javaagent:${configurations.byteBuddyAgent.singleFile}"
    jvmArgs "-javaagent:${configurations.testRuntimeClasspath.find { it.name.contains('mockito-core') }}", '-Xshare:off'
    outputs.dir snippetsDir
}
